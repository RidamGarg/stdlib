/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isIteratorLike = require( '@stdlib/assert/is-iterator-like' );
var format = require( '@stdlib/string/format' );
var array2iterator = require( '@stdlib/array/to-iterator' );


// MAIN //

/**
* Return Iterator which yields all truthy values after getting the first truthy value.
*
* @param {Iterator} iterator - Input iterator.
* @throws {TypeError} Must provide an iterator.
* @returns {Iterator} Iterator which yields all truthy values after getting the first truthy value.
*
* @example
* var array2iterator = require( '@stdlib/array/to-iterator' );
*
* var arr = array2iterator( [ 0, 0, 0, 1, 0 ] );
*
* var it = iterCuAny( arr );
*
* var v = it.next().value;
* // returns false
*
* v = it.next().value;
* // returns false
*
* v = it.next().value;
* // returns false
*
* v = it.next().value;
* // returns true
*
* v = it.next().value;
* // returns true
*
* var bool = it.next().done;
* // returns true
*/
function iterCuAny( iterator ) {
	var arr = [];
	var v = false;
	var x = false;

	if ( !isIteratorLike( iterator ) ) {
		throw new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );
	}
	while ( true ) {
		v = iterator.next();
		if ( v.done ) {
			break;
		}
		if ( v.value ) {
			x = true;
		}
		arr.push( x );
	}
	return array2iterator(arr);
}


// EXPORTS //

module.exports = iterCuAny;
